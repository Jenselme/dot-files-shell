#!/usr/bin/env bash

git-log-line() {
    # From http://mvidner.blogspot.ch/2015/11/git-single-line-history.html
    local file="$1"; shift
    local line="$1"; shift
    git log --format='format:%H' "${file}" |
        while read commit_id; do
            echo -n "${commit_id}:${file}:${line}:"
            git show "${commit_id}:${file}" | sed -n "$line{p; q}"
        done | less
}

git-update-upstream() {
    git co master && git fetch upstream master && git rebase upstream/master
}

geoportal-start() {
    sc-start postgresql httpd searchd tomcat && cd ~/Work/geo-api3 && make serve
}

geoportal-update-mapinfra-data() {
    rsync -avh -P -h --stats --no-o --no-g --delete  -e "ssh -l sit_dev -o PubkeyAuthentication=no" sit_dev@dumbo:/sigeom/sit_dev/sit/mapinfra/data/ /run/media/jenselme/WDATA/sigeom/mapinfra/data/
}

cwd-rpmbuild() {
    rpmbuild --define "_sourcedir $(pwd)" --define "_specdir $(pwd)" --define "_builddir $(pwd)" --define "_srcrpmdir $(pwd)" --define "_rpmdir $(pwd)" "$@"
}
timestamp() {
    date +"%s"
}

ssh-tmux() {
    ssh -t "$1" tmux
}

error_exit() {
    echo "$1" >&2
    exit "${2:-1}"
}

diffback() {
    diff -u "$1.bak" "$1" | sed -e "s#^\(--- .*\)\.bak#\1#"
}

back() {
    cp "$1" "$1.bak"
}

unlog() {
    python3 ~/projects/unlog/unlog/main.py "$@"
}

ink_level() {
    sudo escputil -i -r /dev/usb/lp0
}

fedora-git-clone() {
    cd ~/fedora-scm
    git clone "ssh://pkgs.fedoraproject.org/$1.git"
    cd "$1"
    git config user.email 'jujens@jujens.eu'
}

powersave() {
    sudo /home/jenselme/bin/set-intel-brightness.sh
    tuned-adm profile powersave
    echo 'Profile powersave enabled.'
}

desktop() {
    tuned-adm profile desktop
    echo 'Profile desktop enabled.'
}

# To reenable a drupal module (disactivate, uninstall, install)
reenable_drupal_module() {
  drush -y dis "$1" &&
  drush -y pm-uninstall "$1" &&
  drush -y en "$1"
}

# Copy SPEC and SRPM to ecm-visible
cp-fed-review() {
    cwd=$(pwd)
    pkg_name=${cwd##*/}
    scp "${pkg_name}.spec" blog_jujens_eu:dl/SPECS/
    for SRPM in ./*.src.rpm; do
        scp "${SRPM}" blog_jujens_eu:dl/SRPMS/
    done
}

# Copy a file $1 to jenselme:~/html/visible/$2
cp-to-ecm-visible() {
  scp "$1" "jenselme:~/html/visible/$2"
}

# Send the GIT_* env variables in an SSH session
ssh-with-git() {
    (GIT_COMMITTER_EMAIL="julien.enselme@centrale-marseille.fr"
    GIT_COMMITTER_NAME="Julien Enselme"
    GIT_AUTHOR_EMAIL=$GIT_COMMITTER_EMAIL
    GIT_AUTHOR_NAME=$GIT_COMMITTER_NAME

    export GIT_COMMITTER_EMAIL GIT_COMMITTER_NAME GIT_AUTHOR_EMAIL GIT_AUTHOR_NAME
    ssh "$*")
}

# Colored manual
man() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
    man "$@"
}

function extract() {
    local remove_archive
    local success
    local file_name
    local extract_dir

    function usage(){
cat << __EOF__
Usage: extract [-option] [file ...]

Options:
 -r Remove archive.
__EOF__
    }

    remove_archive=1
    while getopts "r:" opt; do
        case $opt in
            r) remove_archive=0 ;;
            \?) usage >&2; return 2 ;;
        esac
    done
    shift "$((OPTIND-1))"

    if (( # == 0 )); then
        usage
    fi

    while (( # > 0 )); do
	if [[ ! -f "$1" ]]; then
	    echo "extract: '$1' is not a valid file" 1>&2
	    shift
	    continue
	fi

	success=0
	file_name="$( basename "$1" )"
	extract_dir="$( echo "$file_name" | sed "s/\.${1##*.}//g" )"
	case "$1" in
	    (*.tar.gz|*.tgz) tar -xzf "$1" ;;
	    (*.tar.bz2|*.tbz|*.tbz2) tar -xjf "$1" ;;
	    (*.tar.xz|*.txz) tar --xz --help &> /dev/null \
		&& tar --xz -xvf "$1" \
		|| xzcat "$1" | tar -xf - ;;
	    (*.tar.zma|*.tlz) tar --lzma --help &> /dev/null \
		&& tar --lzma -xvf "$1" \
		|| lzcat "$1" | tar -xf - ;;
	    (*.tar) tar -xf "$1" ;;
	    (*.gz) gunzip "$1" ;;
	    (*.bz2) bunzip2 "$1" ;;
	    (*.xz) unxz "$1" ;;
	    (*.lzma) unlzma "$1" ;;
	    (*.Z) uncompress "$1" ;;
	    (*.zip) unzip "$1" -d $extract_dir ;;
	    (*.rar) unrar e -ad "$1" ;;
	    (*.7z) 7za x "$1" ;;
	    (*.deb)
		mkdir -p "$extract_dir/control"
		mkdir -p "$extract_dir/data"
		cd "$extract_dir"; ar vx "../${1}" > /dev/null
		cd control; tar -xzf ../control.tar.gz
		cd ../data; tar -xzf ../data.tar.gz
		cd ..; rm *.tar.gz debian-binary
		cd ..
		;;
	    (*)
		echo "extract: '$1' cannot be extracted" 1>&2
		success=1
		;;
	esac

	(( success = $success > 0 ? $success : $? ))
	(( $success == 0 )) && (( $remove_archive == 0 )) && rm "$1"
	shift
    done
}
